#include <iostream>
#include "SDL_Plotter.h"
#include <iomanip>
#include <cstdlib>
//#include "player.h"

using namespace std;

const int windowHeight = 600;
const int windowWidth = 1000;

int width;
int height;

double jump (double);

SDL_Plotter g(windowHeight, windowWidth);


int main(int argc, char ** argv) {



    // our Rectangle
    int rectPosX = 500;
    int rectPosY = 560;
    width = 20;
    height = 20;

//    Player mario;

//    bool stopped = false;
//    int jumpPosition = 0;


    while (!g.getQuit())
    {
        // Grab Input
        if (g.getKey() == UP_ARROW)
        {
            rectPosY = max(rectPosY - 3, 0);
        }

        else if (g.getKey() == DOWN_ARROW)
        {
            rectPosY = min(rectPosY + 3, windowHeight - height);
        }

        else if (g.getKey() == LEFT_ARROW)
        {
            rectPosX = max(rectPosX - 3, 0);
        }

        else if (g.getKey() == RIGHT_ARROW)
        {
            rectPosX = min(rectPosX + 3, windowWidth - width);
        }
        
        if (g.getKey() == ' ')
        {
            rectPosY = max(rectPosY - 20, 0);
        }


//      Mario Movement
//      if (g.getKey() == UP_ARROW)
//      {
//          mario.move (0, -1);
//      }
//      else if (g.getKey() == DOWN_ARROW)
//      {
//          mario.move (0, 1);
//      }
//      else if (g.getKey() == LEFT_ARROW)
//      {
//          mario.move (-1, 0);
//      }
//      else if (g.getKey() == RIGHT_ARROW)
//      {
//          mario.move (1, 0);
//      }
//    }


    //Draw ===================================================

    // Reset background color
    for (int col = 0; col < windowWidth; ++col)
    {
        for (int row = 0; row < windowHeight; ++row)
        {
            g.plotPixel (col, row, 0, 0, 0);
        }
    }


    // Draw and color square
    for (int col = rectPosX; col < width + rectPosX; ++col)
    {
        for (int row = rectPosY; row < height + rectPosY; ++row)
        {
            g.plotPixel (col, row, 255, 0, 0);
        }
    }





//      Draw line for mario to walk on
    for (int col = 800; col < width + 1000; ++col)
        {
            for (int row = 300; row < height + 300; ++row)
            {
                g.plotPixel (col, row, 0, 0, 255);
            }
        }

    for (int col = 400; col < width + 700; ++col)
        {
            for (int row = 300; row < height + 300; ++row)
            {
                g.plotPixel (col, row, 0, 0, 255);
            }
        }

    for (int col = 0; col < width + 200; ++col)
        {
            for (int row = 300; row < height + 300 ; ++row)
            {
                g.plotPixel (col, row, 0, 0, 255);
            }
        }

    for (int col = 300; col < width + 600; ++col)
        {
            for (int row = 300; row < height + 300; ++row)
            {
                g.plotPixel (col, row, 0, 0, 255);
            }
        }

    for (int col = 600; col < width + 1000; ++col)
        {
            for (int row = 450; row < height + 450; ++row)
            {
                g.plotPixel (col, row, 0, 0, 255);
            }
        }

    for (int col = 0; col < width + 400; ++col)
        {
            for (int row = 450; row < height + 450; ++row)
            {
                g.plotPixel (col, row, 0, 0, 255);
            }
        }

    for (int col = 0; col < width + 1000; ++col)
        {
            for (int row = 577; row < height + 577; ++ row)
            {
                g.plotPixel(col, row, 0, 0, 255);
            }
        }


    for (int col = 0; col < width + 400; ++col)
        {
            for (int row = 150; row < height + 150; ++row)
            {
                g.plotPixel (col, row, 0, 0, 255);
            }
        }
        
        
        
    for (int col = 550; col < width + 1000; ++col)
        {
            for (int row = 150; row < height + 150; ++row)
            {
                g.plotPixel (col, row, 0, 0, 255);
            }
        }


        
        
        // Jumping of player
        

        g.update();
        if (g.kbhit())
        {
            g.getKey();
        }


    }
    return 0;
}



