#include <iostream>
#include "SDL_Plotter.h"
#include "player.h"


using namespace std;

int main(int argc, char ** argv) {

    const int windowHeight = 600;
    const int windowWidth = 1000;


    // our Rectangle
    int rectPosX = 200;
    int rectPosY = 200;
    int width = 100;
    int height = 100;


    SDL_Plotter g (windowHeight, windowWidth);
    Player mario;

    while (!g.getQuit())
    {
        // Grab Input
        if (g.getKey() == UP_ARROW)
        {
            rectPosY = max(rectPosY - 1, 0);
        }
        else if (g.getKey() == DOWN_ARROW)
        {
            rectPosY = min(rectPosY + 1, windowHeight - height);
        }
        else if (g.getKey() == LEFT_ARROW)
        {
            rectPosX = max(rectPosX - 1, 0);
        }
        else if (g.getKey() == RIGHT_ARROW)
        {
            rectPosX = min(rectPosX + 1, windowWidth - width);
        }



        // Mario Movement
        //if (g.getKey() == UP_ARROW)
        //{
        //   mario.move (0, -1);
        //}
        //else if (g.getKey() == DOWN_ARROW)
        //{
        //    mario.move (0, 1);
        //}
        //else if (g.getKey() == LEFT_ARROW)
        //{
        //    mario.move (-1, 0);
        //}
        //else if (g.getKey() == RIGHT_ARROW)
        //{
        //    mario.move (1, 0);
        //}

        // Draw Mario
        //mario.draw(g);







        //Draw ====================================================

        // Reset background color
        for (int col = 0; col < windowWidth; ++col)
        {
            for (int row = 0; row < windowHeight; ++row)
            {
                g.plotPixel (col, row, 0, 0, 0);
            }
        }


        // Draw Loop
        for (int col = rectPosX; col < width + rectPosX; ++col)
        {
            for (int row = rectPosY; row < height + rectPosY; ++row)
            {
                g.plotPixel (col, row, 0, 0, 255);
            }
        }

        g.update();
        if (g.kbhit())
        {
            g.getKey();
        }
        }
        
    return 0;
}
